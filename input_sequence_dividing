// A. Integer Sequence Dividing
// time limit per test1 second
// memory limit per test256 megabytes
// inputstandard input
// outputstandard output
// You are given an integer sequence 1,2,…,𝑛. You have to divide it into two sets 𝐴 and 𝐵 in such a way that each element belongs to exactly one set and |𝑠𝑢𝑚(𝐴)−𝑠𝑢𝑚(𝐵)| is minimum possible.

// The value |𝑥| is the absolute value of 𝑥 and 𝑠𝑢𝑚(𝑆) is the sum of elements of the set 𝑆.

// Input
// The first line of the input contains one integer 𝑛 (1≤𝑛≤2⋅109).

// Output
// Print one integer — the minimum possible value of |𝑠𝑢𝑚(𝐴)−𝑠𝑢𝑚(𝐵)| if you divide the initial sequence 1,2,…,𝑛 into two sets 𝐴 and 𝐵.

// Examples
// inputCopy
// 3
// outputCopy
// 0
// inputCopy
// 5
// outputCopy
// 1
// inputCopy
// 6
// outputCopy
// 1
// Note
// Some (not all) possible answers to examples:

// In the first example you can divide the initial sequence into sets 𝐴={1,2} and 𝐵={3} so the answer is 0.

// In the second example you can divide the initial sequence into sets 𝐴={1,3,4} and 𝐵={2,5} so the answer is 1.

// In the third example you can divide the initial sequence into sets 𝐴={1,4,5} and 𝐵={2,3,6} so the answer is 1.
#include <bits/stdc++.h>
using namespace std;
int main(){
	int n;
	cin>>n;
	int x=n%4;
	if (x==1||x==2){
		cout<<"1"<<endl;
	}
	else{
		cout<<"0"<<endl;
	}
}
//code by sayandeep sharma
